[gd_scene load_steps=10 format=2]

[ext_resource path="res://parts/charts/ColorChecker_sRGB.jpg" type="Texture" id=1]

[sub_resource type="SphereMesh" id=1]
radius = 0.1
height = 0.2
radial_segments = 32
rings = 16

[sub_resource type="SpatialMaterial" id=2]
flags_transparent = true
flags_do_not_receive_shadows = true
albedo_color = Color( 0.5, 0.5, 0.5, 1 )
roughness = 0.58

[sub_resource type="SpatialMaterial" id=3]
flags_transparent = true
flags_do_not_receive_shadows = true
albedo_color = Color( 0.619608, 0.619608, 0.619608, 1 )
metallic = 1.0
metallic_specular = 1.0
roughness = 0.17

[sub_resource type="QuadMesh" id=4]
size = Vector2( 0.148, 0.1 )

[sub_resource type="SpatialMaterial" id=5]
flags_transparent = true
flags_do_not_receive_shadows = true
params_cull_mode = 2
albedo_texture = ExtResource( 1 )
metallic_specular = 0.0
emission_enabled = true
emission = Color( 0, 0, 0, 1 )
emission_energy = 0.25
emission_operator = 0
emission_on_uv2 = false
emission_texture = ExtResource( 1 )

[sub_resource type="QuadMesh" id=6]
size = Vector2( 1, 0.2 )

[sub_resource type="Shader" id=7]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.stable's SpatialMaterial.

shader_type spatial;
//render_mode async_visible,blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,unshaded,shadows_disabled;

render_mode async_visible,blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx,unshaded,shadows_disabled;
//render_mode async_visible,blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx,shadows_disabled;

uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	float g = clamp(UV.x, 0.0, 1.0);
	g = pow(g, 1.0/0.45);
	ALBEDO = vec3(g);//albedo.rgb * albedo_tex.rgb;
//	METALLIC = metallic;
//	ROUGHNESS = roughness;
//	SPECULAR = specular;
	ALPHA = 1.0;
}
"

[sub_resource type="ShaderMaterial" id=8]
render_priority = 1
shader = SubResource( 7 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )

[node name="diagnostic_charts" type="Spatial"]

[node name="grey_ball" type="MeshInstance" parent="."]
layers = 512
mesh = SubResource( 1 )
material/0 = SubResource( 2 )

[node name="chrome_ball" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.231535, 0, 0 )
layers = 512
mesh = SubResource( 1 )
material/0 = SubResource( 3 )

[node name="colour_checker" type="MeshInstance" parent="."]
transform = Transform( 2.77598, 0, 0, 0, 2.77598, 0, 0, 0, 0.107956, 0.114705, 0.273984, 0 )
layers = 512
mesh = SubResource( 4 )
material/0 = SubResource( 5 )

[node name="gradient" type="MeshInstance" parent="."]
transform = Transform( 0.564265, 0, 0, 0, 0.564265, 0, 0, 0, 0.564265, 0.116969, -0.200696, 0 )
layers = 512
mesh = SubResource( 6 )
material/0 = SubResource( 8 )

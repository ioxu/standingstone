[gd_scene load_steps=3 format=2]

[ext_resource path="res://tests/skeletons/mannequin.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Spatial

var skel:Skeleton
var p = \"[skeleton_code]\"


var spine_id := -2
var spine1_id := -2
var spine2_id := -2
var neck_id := -2
var head_id := -2

var initial_spine_pose:Transform
var initial_spine1_pose:Transform
var initial_spine2_pose:Transform
var initial_neck_pose:Transform
var initial_head_pose:Transform

var spine_pose:Transform
var spine1_pose:Transform
var spine2_pose:Transform
var neck_pose:Transform
var head_pose:Transform

var gtime := 0.0

func _ready() -> void:
	skel = $mannequin/Armature/Skeleton
	pprint(\"skeleton: %s\"%skel.get_path())

	spine_id = skel.find_bone(\"Spine\")
	spine1_id = skel.find_bone(\"Spine1\")
	spine2_id = skel.find_bone(\"Spine2\")
	neck_id = skel.find_bone(\"Neck\")
	head_id = skel.find_bone(\"Head\")
	pprint(\"Spine %s\"%spine_id)
	pprint(\"Spine1 %s\"%spine1_id)
	pprint(\"Spine2 %s\"%spine2_id)
	pprint(\"Neck %s\"%neck_id)
	pprint(\"Head %s\"%head_id)

	initial_spine_pose = skel.get_bone_pose(spine_id)
	initial_spine1_pose = skel.get_bone_pose(spine1_id)
	initial_spine2_pose = skel.get_bone_pose(spine2_id)
	initial_neck_pose = skel.get_bone_pose(neck_id)
	initial_head_pose = skel.get_bone_pose(head_id)


func _process(delta: float) -> void:
	gtime += delta
	spine_pose = initial_spine_pose * Transform().rotated( Vector3.RIGHT, sin(gtime * 2) * 0.15)
	skel.set_bone_pose(spine_id, spine_pose )

	spine1_pose = initial_spine1_pose * Transform().rotated( Vector3.RIGHT, sin((gtime-0.4) * 2) * 0.25)
	skel.set_bone_pose(spine1_id, spine1_pose )

	spine2_pose = initial_spine2_pose * Transform().rotated( Vector3.RIGHT, sin((gtime-0.8) * 2) * 0.65)
	skel.set_bone_pose(spine2_id, spine2_pose )

	neck_pose = initial_neck_pose * Transform().rotated( Vector3.RIGHT, sin((gtime-1.2) * 2) * 0.35)
	skel.set_bone_pose(neck_id, neck_pose )

	head_pose = initial_head_pose * Transform().rotated( Vector3.RIGHT, sin((gtime-1.6) * 2) * 0.55)
	skel.set_bone_pose(head_id, head_pose )


func _input(_event):
	if Input.is_action_pressed(\"ui_cancel\"):
		get_tree().quit()


func pprint(msg: String) -> void:
	print(\"[skeleton_code] %s\"%str(msg))
	

"

[node name="Spatial" type="Spatial"]
script = SubResource( 1 )

[node name="mannequin" parent="." instance=ExtResource( 1 )]

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.688772, 0.323359, -0.64887, 0, 0.89502, 0.446026, 0.724978, -0.30721, 0.616465, -1.35654, 1.93203, 1.36579 )
fov = 50.2

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.226229, -0.838589, 0.495569, -0.378824, 0.392963, 0.837897, -0.897392, -0.37729, -0.228778, 0.619914, 0, 0.211717 )
light_energy = 6.0
shadow_enabled = true
directional_shadow_mode = 1
directional_shadow_split_1 = 0.034
directional_shadow_split_2 = 0.094
directional_shadow_split_3 = 0.372
directional_shadow_normal_bias = 0.0
directional_shadow_bias_split_scale = 0.203
directional_shadow_max_distance = 82.1
